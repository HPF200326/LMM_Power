simvar <- "subj" # which random effect do we want to vary in the simulation?
steps <- 60# which sample sizes do we want to look at?
critical_value <- 2 # which t/z value do we want to use to test for significance?
n_sim <- 1000 # how many single simulations should be used to estimate power?
SESOI <- c(3.66, 0.75, -0.065, 0.09) # specify SESOI
model_2_power <- mixedpower(model = model, data = data,
fixed_effects = fixed_effects,
simvar = simvar, steps = steps,
critical_value = critical_value, n_sim = n_sim,
SESOI = SESOI, databased = T)
model_2_power
multiplotPower(model_2_power)
knitr::opts_chunk$set(echo = TRUE)
# 编码
df_simu$modality <- ifelse(
df_simu$modality == "Audio-only", 0, 1)
df_simu$SNR <- ifelse(
df_simu$SNR == "Easy", 0, 1)
library(stringr)
df_simu$subj<-as.numeric(str_sub(df_simu$subj,2,3))
df_simu$stim<-as.numeric(str_sub(df_simu$stim,2,3))
## 模型
model_1<- lmer(RT ~ 1 + modality * SNR +
(1 + modality + SNR|stim) +
(1 + modality + SNR|subj),
data = df_simu)
subj_n <- 10   # 总被试量
stim <-  2  #
trial_n <- 5  # 每种刺激呈现的次数
# 固定效应
b0 <- 998      # 截距 (所有条件的均值)
b1 <- 98      # 听觉模式的固定效应
b2 <- 92      # 背景噪音的固定效应
b3 <- -29     # 听觉模式与背景噪音的交互作用
# 随机效应
u0s <- 269    # 刺激的随机截距
u1s <- 47.95  # 刺激的听觉模式随机斜率
u2s <- 67     # 刺激的背景噪音模式随机斜率
u3s <- 220    # 被试的随机截距
u4s <- 56    # 被试的听觉模式随机斜率
u5s <- 60    #被试的背景噪音模式随机斜率
# 误差项
sigma <- 4
#生成假定实验的条件的数据矩阵
df_simu <- add_random(subj = subj_n, stim = stim) %>%
# 添加听觉模式类型的信息（被试内）
add_within(c("subj","stim"), modality = c("Audio-only","Audiovisual"), SNR = c("Easy","Hard")) %>%
# 每种刺激会呈现10次
add_random(trial = trial_n) %>%
# 视听模式的编码：纯音频条件=0；视听条件=1
add_contrast("modality", "treatment", colnames = "modality_code") %>%
# 背景噪音的编码：简单0；困难1
add_contrast("SNR", "treatment",colnames = "SNR_code") %>%
# 添加基于被试和刺激的随机截距和斜率
add_ranef("subj", u0s = u0s, u1s =u1s , .cors=0.5) %>%
add_ranef("subj", u0s = u0s, u2s =u2s , .cors=0.5) %>%
add_ranef("stim", u3s = u3s, u4s =u4s, .cors=0.5) %>%
add_ranef("stim", u3s = u3s, u5s =u5s, .cors=0.5) %>%
# 添加观察值的误差项
add_ranef(sigma = sigma) %>%
# 最后根据设置的固定效应和随机效应参数值，生成因变量。
mutate(RT = (b0+u0s+u3s) +         # 截距
(b1+u1s+u4s) * modality_code + # 图片材料的斜率
(b2+u2s+u5s) * SNR_code +      # 组别的斜率
b3 * modality_code * SNR_code +   # 交互作用
sigma)         #误差项
head(df_simu,10) #查看生成的数据矩阵
df_simu <- df_simu %>%
select(subj, stim, modality, SNR, RT) # 去除冗余的信息
head(df_simu, 5)#查看数据结构
# 编码
df_simu$modality <- ifelse(
df_simu$modality == "Audio-only", 0, 1)
df_simu$SNR <- ifelse(
df_simu$SNR == "Easy", 0, 1)
library(stringr)
df_simu$subj<-as.numeric(str_sub(df_simu$subj,2,3))
df_simu$stim<-as.numeric(str_sub(df_simu$stim,2,3))
## 模型
model_1<- lmer(RT ~ 1 + modality * SNR +
(1 + modality + SNR|stim) +
(1 + modality + SNR|subj),
data = df_simu)
summary(model_1)
model <- model_1 # which model do we want to simulate power for?
data <- df_simu # data used to fit the model
fixed_effects <- c("modality", "SNR") # all fixed effects specified in FLPmodel
simvar <- "subj" # which random effect do we want to vary in the simulation?
steps <- 60 # which sample sizes do we want to look at?
critical_value <- 2 # which t/z value do we want to use to test for significance?
n_sim <- 1000 # how many single simulations should be used to estimate power?
model_1_power <- mixedpower(model = model, data = data,
fixed_effects = fixed_effects,
simvar = simvar, steps = steps,
critical_value = critical_value, n_sim = n_sim)
View(df_simu)
knitr::opts_chunk$set(echo = TRUE)
df_simu <- df_simu %>%
select(subj, modality, SNR, RT) # 去除冗余的信息
subj_n <- 10   # 总被试量
trial_n <- 5  # 每种刺激呈现的次数 *4 一个被试总的trials是20次
# 固定效应
b0 <- 200     # 截距 (所有条件的均值)
b1 <- 56      # 听觉模式的固定效应
b2 <- 92      # 背景噪音的固定效应
b3 <- -10     # 听觉模式与背景噪音的交互作用
# 随机效应
u0s <- 34    # 被试的随机截距
u1s <- 200  # 被试的听觉模式随机斜率
u2s <- 10     # 被试的背景噪音模式随机斜率
# 误差项
sigma <- 70
#生成假定实验的条件的数据矩阵
df_simu <- add_random(subj = subj_n) %>%
# 添加听觉模式类型的信息（被试内）
add_within("subj", modality = c("Audio-only","Audiovisual"), SNR = c("Easy","Hard")) %>%
# 每种刺激会呈现10次
add_random(trial = trial_n) %>%
# 视听模式的编码：纯音频条件=0；视听条件=1
add_contrast("modality", "treatment", colnames = "modality_code") %>%
# 背景噪音的编码：简单0；困难1
add_contrast("SNR", "treatment",colnames = "SNR_code") %>%
# 添加基于被试的随机截距和斜率
add_ranef("subj", u0s = u0s, u1s =u1s , .cors=0.5) %>%
add_ranef("subj", u0s = u0s, u2s =u2s , .cors=0.5) %>%
# 添加观察值的误差项
add_ranef(sigma = sigma) %>%
# 最后根据设置的固定效应和随机效应参数值，生成因变量。
mutate(RT = (b0+u0s) +         # 截距
(b1+u1s) * modality_code + # 视听模式的斜率
(b2+u2s) * SNR_code +      # 背景噪音的斜率
b3 * modality_code * SNR_code +
sigma)         #误差项
#生成假定实验的条件的数据矩阵
df_simu <- add_random(subj = subj_n) %>%
# 添加听觉模式类型的信息（被试内）
add_within("subj", modality = c("Audio-only","Audiovisual"), SNR = c("Easy","Hard")) %>%
# 每种刺激会呈现10次
add_random(trial = trial_n) %>%
# 视听模式的编码：纯音频条件=0；视听条件=1
add_contrast("modality", "treatment", colnames = "modality_code") %>%
# 背景噪音的编码：简单0；困难1
add_contrast("SNR", "treatment",colnames = "SNR_code") %>%
# 添加基于被试的随机截距和斜率
add_ranef("subj", u0s = u0s, u1s =u1s , .cors=0.5) %>%
add_ranef("subj", u0s = u0s, u2s =u2s , .cors=0.5) %>%
# 添加观察值的误差项
add_ranef(sigma = sigma) %>%
# 最后根据设置的固定效应和随机效应参数值，生成因变量。
mutate(RT = (b0+u0s) +         # 截距
(b1+u1s) * modality_code + # 视听模式的斜率
(b2+u2s) * SNR_code +      # 背景噪音的斜率
b3 * modality_code * SNR_code +
sigma)         #误差项
subj_n <- 10   # 总被试量
trial_n <- 5  # 每种刺激呈现的次数 *4 一个被试总的trials是20次
# 固定效应
b0 <- 200     # 截距 (所有条件的均值)
b1 <- 56      # 听觉模式的固定效应
b2 <- 92      # 背景噪音的固定效应
b3 <- -10     # 听觉模式与背景噪音的交互作用
# 随机效应
u0s <- 34    # 被试的随机截距
u1s <- 200  # 被试的听觉模式随机斜率
u2s <- 10     # 被试的背景噪音模式随机斜率
# 误差项
sigma <- 70
#生成假定实验的条件的数据矩阵
df_simu <- add_random(subj = subj_n) %>%
# 添加听觉模式类型的信息（被试内）
add_within("subj", modality = c("Audio-only","Audiovisual"), SNR = c("Easy","Hard")) %>%
# 每种刺激会呈现10次
add_random(trial = trial_n) %>%
# 视听模式的编码：纯音频条件=0；视听条件=1
add_contrast("modality", "treatment", colnames = "modality_code") %>%
# 背景噪音的编码：简单0；困难1
add_contrast("SNR", "treatment",colnames = "SNR_code") %>%
# 添加基于被试的随机截距和斜率
add_ranef("subj", u0s = u0s, u1s =u1s , .cors=0.5) %>%
add_ranef("subj", u0s = u0s, u2s =u2s , .cors=0.5) %>%
# 添加观察值的误差项
add_ranef(sigma = sigma) %>%
# 最后根据设置的固定效应和随机效应参数值，生成因变量。
mutate(RT = (b0+u0s) +         # 截距
(b1+u1s) * modality_code + # 视听模式的斜率
(b2+u2s) * SNR_code +      # 背景噪音的斜率
b3 * modality_code * SNR_code +
sigma)         #误差项
if (!require(tidyverse)) {library(tidyverse)}
if (!require(faux)) {library(faux)}
if (!require(mixedpower)) {library(mixedpower)}
set.seed(2022)
subj_n <- 10   # 总被试量
trial_n <- 5  # 每种刺激呈现的次数 *4 一个被试总的trials是20次
# 固定效应
b0 <- 200     # 截距 (所有条件的均值)
b1 <- 56      # 听觉模式的固定效应
b2 <- 92      # 背景噪音的固定效应
b3 <- -10     # 听觉模式与背景噪音的交互作用
# 随机效应
u0s <- 34    # 被试的随机截距
u1s <- 200  # 被试的听觉模式随机斜率
u2s <- 10     # 被试的背景噪音模式随机斜率
# 误差项
sigma <- 70
#生成假定实验的条件的数据矩阵
df_simu <- add_random(subj = subj_n) %>%
# 添加听觉模式类型的信息（被试内）
add_within("subj", modality = c("Audio-only","Audiovisual"), SNR = c("Easy","Hard")) %>%
# 每种刺激会呈现10次
add_random(trial = trial_n) %>%
# 视听模式的编码：纯音频条件=0；视听条件=1
add_contrast("modality", "treatment", colnames = "modality_code") %>%
# 背景噪音的编码：简单0；困难1
add_contrast("SNR", "treatment",colnames = "SNR_code") %>%
# 添加基于被试的随机截距和斜率
add_ranef("subj", u0s = u0s, u1s =u1s , .cors=0.5) %>%
add_ranef("subj", u0s = u0s, u2s =u2s , .cors=0.5) %>%
# 添加观察值的误差项
add_ranef(sigma = sigma) %>%
# 最后根据设置的固定效应和随机效应参数值，生成因变量。
mutate(RT = (b0+u0s) +         # 截距
(b1+u1s) * modality_code + # 视听模式的斜率
(b2+u2s) * SNR_code +      # 背景噪音的斜率
b3 * modality_code * SNR_code +
sigma)         #误差项
head(df_simu,10) #查看生成的数据矩阵
df_simu <- df_simu %>%
select(subj, modality, SNR, RT) # 去除冗余的信息
head(df_simu, 5)#查看数据结构
View(df_simu)
subj_n <- 10   # 总被试量
trial_n <- 10  # 每种刺激呈现的次数 *4 一个被试总的trials是20次
# 固定效应
b0 <- 200     # 截距 (所有条件的均值)
b1 <- 56      # 听觉模式的固定效应
b2 <- 92      # 背景噪音的固定效应
b3 <- -10     # 听觉模式与背景噪音的交互作用
# 随机效应
u0s <- 34    # 被试的随机截距
u1s <- 200  # 被试的听觉模式随机斜率
u2s <- 10     # 被试的背景噪音模式随机斜率
# 误差项
sigma <- 70
#生成假定实验的条件的数据矩阵
df_simu <- add_random(subj = subj_n) %>%
# 添加听觉模式类型的信息（被试内）
add_within("subj", modality = c("Audio-only","Audiovisual"), SNR = c("Easy","Hard")) %>%  #2*2 4
# 每种刺激会呈现5次
add_random(trial = trial_n) %>%
# 视听模式的编码：纯音频条件=0；视听条件=1
add_contrast("modality", "treatment", colnames = "modality_code") %>%
# 背景噪音的编码：简单0；困难1
add_contrast("SNR", "treatment",colnames = "SNR_code") %>%
# 添加基于被试的随机截距和斜率
add_ranef("subj", u0s = u0s, u1s =u1s , .cors=0.5) %>%
add_ranef("subj", u0s = u0s, u2s =u2s , .cors=0.5) %>%
# 添加观察值的误差项
add_ranef(sigma = sigma) %>%
# 最后根据设置的固定效应和随机效应参数值，生成因变量。
mutate(RT = (b0+u0s) +         # 截距
(b1+u1s) * modality_code + # 视听模式的斜率
(b2+u2s) * SNR_code +      # 背景噪音的斜率
b3 * modality_code * SNR_code +
sigma)         #误差项
head(df_simu,10) #查看生成的数据矩阵
df_simu <- df_simu %>%
select(subj, modality, SNR, RT) # 去除冗余的信息
head(df_simu, 5)#查看数据结构
# 编码
df_simu$modality <- ifelse(
df_simu$modality == "Audio-only", 0, 1)
df_simu$SNR <- ifelse(
df_simu$SNR == "Easy", 0, 1)
library(stringr)
df_simu$subj<-as.numeric(str_sub(df_simu$subj,2,3))
#df_simu$stim<-as.numeric(str_sub(df_simu$stim,2,3))
## 模型
model_1<- lmer(RT ~ 1 + modality * SNR +
(1 + modality + SNR|subj),
data = df_simu)
summary(model_1)
model <- model_1 # which model do we want to simulate power for?
data <- df_simu # data used to fit the model
fixed_effects <- c("modality", "SNR") # all fixed effects specified in model
simvar <- "subj" # which random effect do we want to vary in the simulation?
steps <- c(15,20,25) # which sample sizes do we want to look at?
critical_value <- 2 # which t/z value do we want to use to test for significance?
n_sim <- 1000 # how many single simulations should be used to estimate power?
SESOI <- c(38, 63, 92, -10) # specify SESOI
model_2_power <- mixedpower(model = model, data = data,
fixed_effects = fixed_effects,
simvar = simvar, steps = steps,
critical_value = critical_value, n_sim = n_sim,
SESOI = SESOI, databased = T)
model_2_power
multiplotPower(model_2_power)
subj_n <- 10   # 总被试量
trial_n <- 15  # 每种刺激呈现的次数 *4 一个被试总的trials是20次
# 固定效应
b0 <- 200     # 截距 (所有条件的均值)
b1 <- 56      # 听觉模式的固定效应
b2 <- 92      # 背景噪音的固定效应
b3 <- -10     # 听觉模式与背景噪音的交互作用
# 随机效应
u0s <- 34    # 被试的随机截距
u1s <- 200  # 被试的听觉模式随机斜率
u2s <- 10     # 被试的背景噪音模式随机斜率
# 误差项
sigma <- 70
#生成假定实验的条件的数据矩阵
df_simu <- add_random(subj = subj_n) %>%
# 添加听觉模式类型的信息（被试内）
add_within("subj", modality = c("Audio-only","Audiovisual"), SNR = c("Easy","Hard")) %>%  #2*2 4
# 每种刺激会呈现5次
add_random(trial = trial_n) %>%
# 视听模式的编码：纯音频条件=0；视听条件=1
add_contrast("modality", "treatment", colnames = "modality_code") %>%
# 背景噪音的编码：简单0；困难1
add_contrast("SNR", "treatment",colnames = "SNR_code") %>%
# 添加基于被试的随机截距和斜率
add_ranef("subj", u0s = u0s, u1s =u1s , .cors=0.5) %>%
add_ranef("subj", u0s = u0s, u2s =u2s , .cors=0.5) %>%
# 添加观察值的误差项
add_ranef(sigma = sigma) %>%
# 最后根据设置的固定效应和随机效应参数值，生成因变量。
mutate(RT = (b0+u0s) +         # 截距
(b1+u1s) * modality_code + # 视听模式的斜率
(b2+u2s) * SNR_code +      # 背景噪音的斜率
b3 * modality_code * SNR_code +
sigma)         #误差项
head(df_simu,10) #查看生成的数据矩阵
df_simu <- df_simu %>%
select(subj, modality, SNR, RT) # 去除冗余的信息
head(df_simu, 5)#查看数据结构
# 编码
df_simu$modality <- ifelse(
df_simu$modality == "Audio-only", 0, 1)
df_simu$SNR <- ifelse(
df_simu$SNR == "Easy", 0, 1)
library(stringr)
df_simu$subj<-as.numeric(str_sub(df_simu$subj,2,3))
#df_simu$stim<-as.numeric(str_sub(df_simu$stim,2,3))
## 模型
model_1<- lmer(RT ~ 1 + modality * SNR +
(1 + modality + SNR|subj),
data = df_simu)
summary(model_1)
model <- model_1 # which model do we want to simulate power for?
data <- df_simu # data used to fit the model
fixed_effects <- c("modality", "SNR") # all fixed effects specified in model
simvar <- "subj" # which random effect do we want to vary in the simulation?
steps <- c(15,20,25) # which sample sizes do we want to look at?
critical_value <- 2 # which t/z value do we want to use to test for significance?
n_sim <- 1000 # how many single simulations should be used to estimate power?
SESOI <- c(38, 63, 92, -10) # specify SESOI
model_2_power <- mixedpower(model = model, data = data,
fixed_effects = fixed_effects,
simvar = simvar, steps = steps,
critical_value = critical_value, n_sim = n_sim,
SESOI = SESOI, databased = T)
model_2_power
multiplotPower(model_2_power)
View(df_simu)
knitr::opts_chunk$set(echo = TRUE)
if (!require(tidyverse)) {library(tidyverse)}
if (!require(faux)) {library(faux)}
if (!require(mixedpower)) {library(mixedpower)}
set.seed(2022)
subj_n <- 10   # 总被试量
trial_n <- 20  # 5 10 15 每种刺激呈现的次数*4 一个被试总的20 40 60 (trials是 4*trial_n 次)
# 固定效应
b0 <- 200     # 截距 (所有条件的均值)
b1 <- 56      # 听觉模式的固定效应
b2 <- 92      # 背景噪音的固定效应
b3 <- -10     # 听觉模式与背景噪音的交互作用
# 随机效应
u0s <- 34    # 被试的随机截距
u1s <- 200  # 被试的听觉模式随机斜率
u2s <- 10     # 被试的背景噪音模式随机斜率
# 误差项
sigma <- 70
#生成假定实验的条件的数据矩阵
df_simu <- add_random(subj = subj_n) %>%
# 添加听觉模式类型的信息（被试内）
add_within("subj", modality = c("Audio-only","Audiovisual"), SNR = c("Easy","Hard")) %>%  #2*2 4
# 每种刺激会呈现5次
add_random(trial = trial_n) %>%
# 视听模式的编码：纯音频条件=0；视听条件=1
add_contrast("modality", "treatment", colnames = "modality_code") %>%
# 背景噪音的编码：简单0；困难1
add_contrast("SNR", "treatment",colnames = "SNR_code") %>%
# 添加基于被试的随机截距和斜率
add_ranef("subj", u0s = u0s, u1s =u1s , .cors=0.5) %>%
add_ranef("subj", u0s = u0s, u2s =u2s , .cors=0.5) %>%
# 添加观察值的误差项
add_ranef(sigma = sigma) %>%
# 最后根据设置的固定效应和随机效应参数值，生成因变量。
mutate(RT = (b0+u0s) +         # 截距
(b1+u1s) * modality_code + # 视听模式的斜率
(b2+u2s) * SNR_code +      # 背景噪音的斜率
b3 * modality_code * SNR_code +
sigma)         #误差项
head(df_simu,10) #查看生成的数据矩阵
df_simu <- df_simu %>%
select(subj, modality, SNR, RT) # 去除冗余的信息
head(df_simu, 5)#查看数据结构
# 编码
df_simu$modality <- ifelse(
df_simu$modality == "Audio-only", 0, 1)
df_simu$SNR <- ifelse(
df_simu$SNR == "Easy", 0, 1)
library(stringr)
df_simu$subj<-as.numeric(str_sub(df_simu$subj,2,3))
#df_simu$stim<-as.numeric(str_sub(df_simu$stim,2,3))
## 模型
model_1<- lmer(RT ~ 1 + modality * SNR +
(1 + modality + SNR|subj),
data = df_simu)
summary(model_1)
model <- model_1 # which model do we want to simulate power for?
data <- df_simu # data used to fit the model
fixed_effects <- c("modality", "SNR") # all fixed effects specified in model
simvar <- "subj" # which random effect do we want to vary in the simulation?
steps <- c(20,30,40) # which sample sizes do we want to look at?
critical_value <- 2 # which t/z value do we want to use to test for significance?
n_sim <- 1000 # how many single simulations should be used to estimate power?
model_1_power <- mixedpower(model = model, data = data,
fixed_effects = fixed_effects,
simvar = simvar, steps = steps,
critical_value = critical_value, n_sim = n_sim)
model <- model_1 # which model do we want to simulate power for?
data <- df_simu # data used to fit the model
fixed_effects <- c("modality", "SNR") # all fixed effects specified in model
simvar <- "subj" # which random effect do we want to vary in the simulation?
steps <- c(15,20,25) # which sample sizes do we want to look at?
critical_value <- 2 # which t/z value do we want to use to test for significance?
n_sim <- 1000 # how many single simulations should be used to estimate power?
SESOI <- c(38, 63, 92, -10) # specify SESOI
model_2_power <- mixedpower(model = model, data = data,
fixed_effects = fixed_effects,
simvar = simvar, steps = steps,
critical_value = critical_value, n_sim = n_sim,
SESOI = SESOI, databased = T)
model_2_power
multiplotPower(model_2_power)
subj_n <- 10   # 总被试量
trial_n <- 5  # 5 10 15 每种刺激呈现的次数*4 一个被试总的20 40 60 (trials是 4*trial_n 次)
# 固定效应
b0 <- 200     # 截距 (所有条件的均值)
b1 <- 56      # 听觉模式的固定效应
b2 <- 92      # 背景噪音的固定效应
b3 <- -10     # 听觉模式与背景噪音的交互作用
# 随机效应
u0s <- 34    # 被试的随机截距
u1s <- 200  # 被试的听觉模式随机斜率
u2s <- 10     # 被试的背景噪音模式随机斜率
# 误差项
sigma <- 70
#生成假定实验的条件的数据矩阵
df_simu <- add_random(subj = subj_n) %>%
# 添加听觉模式类型的信息（被试内）
add_within("subj", modality = c("Audio-only","Audiovisual"), SNR = c("Easy","Hard")) %>%  #2*2 4
# 每种刺激会呈现5次
add_random(trial = trial_n) %>%
# 视听模式的编码：纯音频条件=0；视听条件=1
add_contrast("modality", "treatment", colnames = "modality_code") %>%
# 背景噪音的编码：简单0；困难1
add_contrast("SNR", "treatment",colnames = "SNR_code") %>%
# 添加基于被试的随机截距和斜率
add_ranef("subj", u0s = u0s, u1s =u1s , .cors=0.5) %>%
add_ranef("subj", u0s = u0s, u2s =u2s , .cors=0.5) %>%
# 添加观察值的误差项
add_ranef(sigma = sigma) %>%
# 最后根据设置的固定效应和随机效应参数值，生成因变量。
mutate(RT = (b0+u0s) +         # 截距
(b1+u1s) * modality_code + # 视听模式的斜率
(b2+u2s) * SNR_code +      # 背景噪音的斜率
b3 * modality_code * SNR_code +
sigma)         #误差项
head(df_simu,10) #查看生成的数据矩阵
df_simu <- df_simu %>%
select(subj, modality, SNR, RT) # 去除冗余的信息
head(df_simu, 5)#查看数据结构
# 编码
df_simu$modality <- ifelse(
df_simu$modality == "Audio-only", 0, 1)
df_simu$SNR <- ifelse(
df_simu$SNR == "Easy", 0, 1)
library(stringr)
df_simu$subj<-as.numeric(str_sub(df_simu$subj,2,3))
#df_simu$stim<-as.numeric(str_sub(df_simu$stim,2,3))
## 模型
model_1<- lmer(RT ~ 1 + modality * SNR +
(1 + modality + SNR|subj),
data = df_simu)
summary(model_1)
model <- model_1 # which model do we want to simulate power for?
data <- df_simu # data used to fit the model
fixed_effects <- c("modality", "SNR") # all fixed effects specified in model
simvar <- "subj" # which random effect do we want to vary in the simulation?
steps <- c(15,20,25) # which sample sizes do we want to look at?
critical_value <- 2 # which t/z value do we want to use to test for significance?
n_sim <- 1000 # how many single simulations should be used to estimate power?
SESOI <- c(38, 63, 92, -10) # specify SESOI
model_2_power <- mixedpower(model = model, data = data,
fixed_effects = fixed_effects,
simvar = simvar, steps = steps,
critical_value = critical_value, n_sim = n_sim,
SESOI = SESOI, databased = T)
model_2_power
multiplotPower(model_2_power)
